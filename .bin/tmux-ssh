#!/usr/bin/env bash

# shellcheck source=bash44.conf
. "$(dirname "${0}")"/bash44.conf || exit 1
# shellcheck source=constants.conf
. "$(dirname "${0}")"/constants.conf
# shellcheck source=functions.conf
. "$(dirname "${0}")"/functions.conf

WINDOW_NAME="${WINDOW_NAME:-default}"

_help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...] <SESSION NAME> user@host{1..3} anotherUser@anotherHost{1..3}

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

EOT
  exit "${exit_code}"
}

_tmux() {
  local args
  local hosts
  local session_name
  local window_name_number
  # shellcheck disable=SC2206
  args=(${@:2})
  hosts=()
  session_name="${1:?}"
  window_name_number=1
  if tmux has-session -t "${session_name}" 2> /dev/null; then
    _exit 1 "session name already exists, exiting."
  else
    tmux new -d -n "${WINDOW_NAME}${window_name_number}" -s "${session_name}" "ssh ${args[0]}"
  fi
  unset 'args[0]'
  for i in "${args[@]}"; do
    hosts+=("${i:?}")
    if [ "${#hosts[@]}" -le 2 ]; then
      tmux split-window -t :"${WINDOW_NAME}${window_name_number}" "ssh ${i:?}"
      tmux select-layout even-vertical
    elif [ "${#hosts[@]}" -le 8 ]; then
      tmux split-window -t :"${WINDOW_NAME}${window_name_number}" "ssh ${i:?}"
      tmux select-layout tiled
    else
      hosts=()
      window_name_number=$((window_name_number + 1))
      tmux new-window -n "${WINDOW_NAME}${window_name_number}" -t "${session_name}" "ssh ${i:?}"
      tmux select-layout even-vertical
    fi
    tmux select-pane -t :.+
    tmux set-window-option -t :"${WINDOW_NAME}${window_name_number}" synchronize-panes on
  done
}

trap '_catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

[ $# -ge 2 ] || _help 1

OPTIND=1
while getopts 'HUV' ARGS; do
  case "${ARGS}" in
    H | U)
      _help 0
      ;;
    V)
      _exit 0 'v3'
      ;;
    ?)
      _help 1
      ;;
  esac
done
shift $((OPTIND - 1))

_tmux "${@}"

tmux select-window -t "${1:?}":"${WINDOW_NAME}"1
tmux attach-session -t "${1:?}"
