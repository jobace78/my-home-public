#!/usr/bin/env bash

# shellcheck source=bash44.conf
. "$(dirname "${0}")"/bash44.conf || exit 1
# shellcheck source=functions.conf
. "$(dirname "${0}")"/functions.conf

case "$(uname)" in
  Darwin*) ;;
  *)
    _exit 1 'Sorry, only macOS is supported at this moment, exiting.'
    ;;
esac

release_version="$(curl -L https://dl.k8s.io/release/stable.txt 2> /dev/null)"

# Notes:
#   - https://github.com/kubernetes/kubectl
#
_download_and_install() {
  case "$(uname -m)" in
    arm64)
      # shellcheck disable=SC2086
      curl ${CURL_OPTIONS} -o "${HOME:?}"/.bin/kubectl https://dl.k8s.io/release/"${release_version:?}"/bin/darwin/arm64/kubectl
      ;;
    x86_64)
      # shellcheck disable=SC2086
      curl ${CURL_OPTIONS} -o "${HOME:?}"/.bin/kubectl https://dl.k8s.io/release/"${release_version:?}"/bin/darwin/amd64/kubectl
      ;;
    *)
      _exit 1 'unsupported machine hardware, exiting.'
      ;;
  esac
  chmod 0755 "${HOME:?}"/.bin/kubectl
}

_help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...]

  Options:
    -f Force

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

EOT
  exit "${exit_code}"
}

trap '_catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

OPTIND=1
while getopts 'fHUV' ARGS; do
  case "${ARGS}" in
    f)
      force='true'
      ;;
    H | U)
      _help 0
      ;;
    V)
      _exit 0 'v3'
      ;;
    ?)
      _help 1
      ;;
  esac
done
shift $((OPTIND - 1))

if [ -f "${HOME:?}"/.bin/kubectl ]; then
  if [ "${force}" = 'true' ]; then
    rm -f -v "${HOME:?}"/.bin/kubectl
    _download_and_install
  fi
else
  _download_and_install
fi
# completion
#
rm -f "${HOME:?}"/.local/share/zsh/site-functions/_kubectl
if [ -x "${HOME:?}"/.bin/kubectl ]; then
  "${HOME:?}"/.bin/kubectl completion zsh >> "${HOME:?}"/.local/share/zsh/site-functions/_kubectl
fi
