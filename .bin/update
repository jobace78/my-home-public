#!/usr/bin/env bash

### BASH BASE [V2] BEGIN ###

if [ -n "${BASH_VERSINFO[*]}" ]; then
  if [ "${BASH_VERSINFO[0]}" -ge 4 ] && [ "${BASH_VERSINFO[1]}" -ge 4 ]; then
    :
  elif [ "${BASH_VERSINFO[0]}" -ge 5 ]; then
    :
  else
    exit 1
  fi
else
  exit 1
fi

if [ "${SCRIPT_DEBUG}" = 'true' ]; then
  echo 'Script debugging is enabled, allowing bash commands and their arguments to be printed as they are executed.'
  set -x
fi

# Notes:
#   - https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
#   - https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html
#   - https://en.wikipedia.org/wiki/Umask
#
BASH_COMPAT=44
export BASH_COMPAT
set -e -o pipefail
shopt -s dotglob extglob
umask "${UMASK:-0007}"

### BASH BASE [V2] END ###

case "$(uname)" in
  Darwin*)
    ;;
  *)
    echo 'Sorry, only macOS is supported at this moment...'
    exit 1
    ;;
esac

# shellcheck source=functions.conf
. "$(dirname "${0}")"/functions.conf

# _help
# _update

_help() {
  local exit_code
  exit_code="${1:-1}"
  cat << EOT

  Usage: $(basename "${0}") [OPTION...]

  Options:
    -f Force

  Help options:
    -H Show this help message
    -U Display brief usage
    -V Print version

EOT
  exit "${exit_code}"
}

_update() {
  for f in "${HOME:?}"/.bin/update?*; do
    if [ -x "${f}" ]; then
      echo "running '${f}'..."
      if [ "${force}" = 'true' ]; then
        "${f}" -f
      else
        "${f}"
      fi
    fi
  done
  # _az
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_az
  if [ -f "$(brew --prefix 2> /dev/null)"/etc/bash_completion.d/az ]; then
    echo "${HOME:?}"/.local/share/zsh/site-functions/_az
    {
      echo '#compdef az'
      cat "$(brew --prefix 2> /dev/null)"/etc/bash_completion.d/az
    } >> "${HOME:?}"/.local/share/zsh/site-functions/_az
  fi
  # _docker
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_docker
  if [ -f /Applications/Docker.app/Contents/Resources/etc/_docker ]; then
    ln -s -v /Applications/Docker.app/Contents/Resources/etc/_docker "${HOME:?}"/.local/share/zsh/site-functions/_docker
  fi
  # _docker-compose
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_docker-compose
  if [ -f /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion ]; then
    ln -s -v /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion "${HOME:?}"/.local/share/zsh/site-functions/_docker-compose
  fi
  # _op
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/_op
  if [ -x /usr/local/bin/op ]; then
    echo "${HOME:?}"/.local/share/zsh/site-functions/_op
    /usr/local/bin/op completion zsh > "${HOME:?}"/.local/share/zsh/site-functions/_op
  fi
  # git-completion.bash
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/git-completion.bash
  if [ -f /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash ]; then
    ln -s -v /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash "${HOME:?}"/.local/share/zsh/site-functions/git-completion.bash
  fi
  # git-completion.zsh
  #
  rm -f "${HOME:?}"/.local/share/zsh/site-functions/git-completion.zsh
  if [ -f /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.zsh ]; then
    ln -s -v /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.zsh "${HOME:?}"/.local/share/zsh/site-functions/git-completion.zsh
  fi
}

trap '_catch_all ${?}' ERR SIGHUP SIGINT SIGQUIT SIGTERM

OPTIND=1
while getopts 'fHUV' ARGS; do
  case "${ARGS}" in
    f)
      force='true'
      ;;
    H|U)
      _help 0
      ;;
    V)
      _exit 0 'v3'
      ;;
    ?)
      _help 1
      ;;
  esac
done
shift $(( OPTIND - 1 ))

_update

_exit 0
